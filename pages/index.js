import { async } from "@firebase/util";
import Head from "next/head";
import Image from "next/image";
import NavBar from "../components/NavBar";
import Link from "next/link";
import styles from "../styles/Home.module.css";
import {
  TwitterShareButton,
  TwitterIcon,
  FacebookShareButton,
  FacebookIcon,
  RedditShareButton,
  RedditIcon,
} from "react-share";
import Collapsible from "react-collapsible-paragraph";

import DNews from "../artifacts/contracts/DNews.sol/DNews.json";
import { useEffect, useState } from "react";
import { ethers } from "ethers";
import axios from "axios";

export default function Home({ news }) {
  const [contract, setContract] = useState(null);
  const [blogToVote, setBlogToVote] = useState([]);
  const [blogs, setBlogs] = useState([]);

  //console.log(news)

  const getMetadata = (blogUrl) => axios.get(blogUrl);

  const getVotes = async (_blogHash) => {
    const _votes = await contract.getBlogVotes(_blogHash);

    return { id: _blogHash, votes: parseInt(_votes) };
  };

  const getAllBlogs = async () => {
    const _blogs = await contract.getAllBlogs();

    const votesDataArr = await Promise.all(
      _blogs.map((blogUrl) => getVotes(blogUrl))
    );

    console.log({ votesDataArr });

    setBlogToVote(votesDataArr);

    const blogDataArr = await Promise.all(
      _blogs.map((blogUrl) => getMetadata(blogUrl))
    );

    const blogsArr = blogDataArr.map((blog) => blog.data);

    setBlogs(blogsArr);
  };

  useEffect(() => {
    const contractAddr = process.env.NEXT_PUBLIC_CONRACT_ADDR;

    const provider = new ethers.providers.Web3Provider(window.ethereum);

    const signer = provider.getSigner();

    const _contract = new ethers.Contract(contractAddr, DNews.abi, signer);

    setContract(_contract);
  }, []);

  const upvoteForBlog = async (_id) => {
    const upvoted = await contract.voteForBlog(_id);
    console.log({ upvoted, _id });

    getAllBlogs();
  };

  useEffect(() => {
    if (contract) getAllBlogs();
  }, [contract]);

  return (
    <div className="center">
      <Head>
        <title>TOINApp</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link
          href="https://fonts.googleapis.com/icon?family=Material+Icons"
          rel="stylesheet"
        ></link>
      </Head>
      <h1> TION : HOME PAGE</h1>
      <div className="card-panel center">
        <h5 className="black-text text-darken-5 font-style">
          <i> Your feed</i>
        </h5>
      </div>

      {blogs.map((newslist, i) => {
        return (
          <div className="card" key={i}>
            <div className="card-image">
              <img src={newslist.imgUrl} alt={i} />
            </div>
            <span className="black-text card-title">{newslist.title}</span>
            <div className="card-content">
              <div>
                <Collapsible lines={3}>{newslist.body}</Collapsible>
              </div>
            </div>
            <div className="row">
              <div className="col s6">
                <div className="card-action">
                  <i>Upvotes: {blogToVote[i].votes}</i>
                  <div
                    className="waves-effect waves-light btn-small aa"
                    onClick={() => upvoteForBlog(blogToVote[i].id)}
                  >
                    <i className="small material-icons">arrow_upward</i>
                  </div>
                </div>
              </div>
              <div className="col s6">
                <div className="card-action">
                  <TwitterShareButton
                    url={blogToVote[i].id}
                    title={newslist.title}
                  >
                    <TwitterIcon size={32} round />
                  </TwitterShareButton>
                  <FacebookShareButton
                    url={blogToVote[i].id}
                    quote={newslist.title}
                  >
                    <FacebookIcon size={32} round />
                  </FacebookShareButton>
                  <RedditShareButton
                    url={blogToVote[i].id}
                    title={newslist.title}
                    windowWidth={660}
                    windowHeight={460}
                  >
                    <RedditIcon size={32} round />
                  </RedditShareButton>
                </div>{" "}
              </div>
            </div>
          </div>
        );
      })}
      <style jsx>
        {`
          .card {
            max-width: 600px;
            margin: 22px auto;
          }
          .aa {
            margin: 20px;
          }
        `}
      </style>
    </div>
  );
}
